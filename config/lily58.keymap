/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

/ {
    combos {
        compatible = "zmk,combos";

        Control {
            bindings = <&kp LCTRL>;
            key-positions = <38 39>;
        };

        meta {
            bindings = <&kp RIGHT_META>;
            key-positions = <20 21>;
        };

        Super {
            bindings = <&kp X>;
            key-positions = <28 13>;
            layers = <4>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&kp LEFT_BRACKET  &kp Q  &kp W  &kp M   &kp R      &kp B         &kp Y      &kp U            &kp O  &kp P  &kp SQT   &kp RIGHT_BRACKET
&kp COMMA         &kp F  &kp E  &kp T   &kp I      &kp A         &kp H      &kp J            &kp K  &kp L  &kp SEMI  &kp DOT
&kp EQUAL         &kp Z  &kp X  &kp D   &kp C      &kp V         &kp N      &kp O            &kp S  &kp G  &kp FSLH  &kp BACKSPACE
                                &tog 1  &kp SPACE  &kp ESCAPE    &kp ENTER  &kp RIGHT_SHIFT  &mo 2
            >;
        };

        Movement {
            bindings = <
&kp LEFT_PARENTHESIS  &kp KP_DIVIDE  &kp N7  &kp N8  &kp N9            &kp MINUS    &kp R         &kp D      &kp U   &kp COMMA  &kp AT_SIGN  &kp RIGHT_PARENTHESIS
&kp Q                 &kp ASTRK      &kp N4  &kp N5  &kp N6            &kp PLUS     &kp H         &kp J      &kp K   &kp L      &kp DOLLAR   &kp BACKSLASH
&kp CARET             &kp N0         &kp N1  &kp N2  &kp N3            &kp EQUAL    &kp C         &kp V      &kp X   &kp Z      &kp PERCENT  &kp DELETE
                                             &trans  &kp LEFT_COMMAND  &kp SPACE    &kp LEFT_ALT  &kp RCTRL  &trans
            >;
        };

        media {
            bindings = <
&ext_power EP_TOG  &trans  &trans          &kp UP_ARROW    &trans           &trans    &trans  &trans          &kp K_VOLUME_UP    &trans      &trans  &trans
&sys_reset         &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans    &trans  &kp K_PREVIOUS  &kp K_PLAY_PAUSE   &kp K_NEXT  &trans  &trans
&bootloader        &trans  &trans          &trans          &trans           &trans    &trans  &kp K_MUTE      &kp K_VOLUME_DOWN  &trans      &trans  &trans
                                           &trans          &trans           &trans    &trans  &trans          &trans
            >;
        };

        Function {
            bindings = <
&kp F1   &kp F2   &kp F3   &kp F4   &kp F5   &kp F6     &kp F7   &kp F8   &kp F9   &kp F10  &kp F11  &kp F12
&kp F13  &kp F14  &kp F15  &kp F16  &kp F17  &kp F18    &kp F19  &kp F20  &kp F21  &kp F22  &kp F23  &kp F24
&trans   &trans   &trans   &trans   &trans   &trans     &trans   &trans   &trans   &trans   &trans   &trans
                           &trans   &trans   &trans     &trans   &trans   &tog 4
            >;
        };

        Gaming {
            bindings = <
&kp F10  &kp Q      &kp N2  &kp N3  &kp E     &kp T        &trans  &trans  &trans  &trans  &trans  &trans
&kp I    &kp LSHFT  &kp A   &kp W   &kp D     &kp F        &trans  &trans  &trans  &trans  &trans  &trans
&kp M    &kp LCTRL  &kp N1  &kp S   &kp Z     &kp G        &trans  &trans  &trans  &trans  &trans  &trans
                            &kp C   &kp LALT  &kp SPACE    &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Both {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
